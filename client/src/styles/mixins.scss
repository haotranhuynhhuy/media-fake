@use 'sass:math';

@mixin text-overflow($number: 2) {
    -webkit-box-orient: vertical;
    display: -webkit-box;
    -webkit-line-clamp: ($number);
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin aspect-ratio($width: 1, $height: 1) {
    position: relative;

    &::before {
        content: '';
        display: block;
        padding-bottom: math.div($height, $width) * 100%;
    }
}

@mixin transition($value) {
    transition: $value;
}

@mixin scroll-bars($size: 12,
$thumb-color: $may-green,
$track-color: $white-smoke,
$border-radius-thumb: 5,
$border-thumb: 2,
$border-radius-track: 0) {

    // For Internet Explorer

    scrollbar-face-color: $thumb-color;
    scrollbar-track-color: $track-color;

    // For Google Chrome
    &::-webkit-scrollbar {
        height: rem($size);
        margin-right: rem(10);
        width: rem($size);
    }

    &::-webkit-scrollbar-thumb {
        background: $thumb-color;
        border: rem($border-thumb) solid $thumb-color;
        border-radius: rem($border-radius-thumb);
    }

    &::-webkit-scrollbar-track {
        background: $track-color;
        border-radius: rem($border-radius-track);
    }
}

@mixin font-base($font-size: 16, $line-height: 24) {
    font-size: rem($font-size);
    line-height: rem($line-height);
}

@mixin style-bg-color() {
    &-bg-white {
        background-color: $white;
    }
}

@mixin style-font-weight() {
    &-100 {
        font-weight: 100;
    }

    &-200 {
        font-weight: 200;
    }

    &-300 {
        font-weight: 300;
    }

    &-400 {
        font-weight: normal;
    }

    &-500 {
        font-weight: 500;
    }

    &-600 {
        font-weight: 600;
    }

    &-700 {
        font-weight: bold;
    }

    &-800 {
        font-weight: 800;
    }

    &-900 {
        font-weight: 900;
    }
}

@mixin style-general() {
    &-uppercase {
        text-transform: uppercase;
    }

    &-capitalize {
        text-transform: capitalize;
    }

    &-underline {
        text-decoration: underline;
    }

    &-italic {
        font-style: italic;
    }

    &-center {
        text-align: center;
    }

    &-justify {
        text-align: justify;
    }
}

@mixin reset-button {
    appearance: none;
    background-color: none;
    border: 0;
    outline: none;
}

@mixin list-style-none {
    list-style: none;
    margin: 0;
    padding: 0;
}

@mixin adjust-flex($justify-content: center, $align-item: center) {
    align-items: $align-item;
    display: flex;
    justify-content: $justify-content;
}
@mixin skeleton-css {
    background-image: linear-gradient(90deg,
    rgba($bg-gray-blur, 0) 0,
    rgba($bg-gray-blur, 0.2) 20%,
    rgba($bg-gray-blur, 0.5) 60%,
    rgba($bg-gray-blur, 0));
    animation: shimmer 1.5s ease-in-out infinite;
    margin: rem(5) 0;
    border-radius: rem(8);
}

$colors-design: (
    'white': $white,
    'black': $jet,
    'blueNavy': $bright-Navy-blue,
    'dimGray': $dim-gray,
    'jet': $jet,
    'cg-red':$cg-red,
    'gainsboro':$gainsboro,
    'silver':$silver,
);

@mixin style-color {
    @each $name, $color in $colors-design {
        &-#{$name} {
            color: $color;
        }
    }
}
@mixin style-letter-spacing() {
    &-s00015 {
        letter-spacing: 0.0015em;
    }

    &-s005 {
        letter-spacing: 0.005em;
    }
}

$colors-gradient-design: (
    'tealGradient2': $teal-gradient-2,
    'gradientCopper': $gradient-copper,
    'gradientDarkGreen':$gradient-dark-green
);

@mixin style-color-gradient {
    @each $name, $color in $colors-gradient-design {
        &-#{$name} {
            background: $color;
            background-clip: text;
            color: transparent;
        }
    }
}

@mixin style-map($sizeList, $type: 'fontSize') {
    @each $size,
        $val in $sizeList {
        
        @if map-get($val, 'desktop') {

            &-#{$size} {
                @if $type == 'fontSize' {
                    font-size: rem(map-get(map-get($val, 'desktop'), 'fs'));
                    line-height: rem(map-get(map-get($val, 'desktop'), 'lh'));
                    
                    @if map-get($val, 'tablet') {
                        @include tablet-down {
                            font-size: rem(map-get(map-get($val, 'tablet'), 'fs'));
                            line-height: rem(map-get(map-get($val, 'tablet'), 'lh'));
                        }
                    }
    
                    @if map-get($val, 'mobile') {
                        @include mobile-down {
                            font-size: rem(map-get(map-get($val, 'mobile'), 'fs'));
                            line-height: rem(map-get(map-get($val, 'mobile'), 'lh'));
                        }
                    } 
                }
                @if $type == 'ratio' {
                    @include aspect-ratio(map-get(map-get($val, 'desktop'), 'w'), map-get(map-get($val, 'desktop'), 'h'));
                    
                    @if map-get($val, 'tablet') {
                        @include tablet-down {
                            @include aspect-ratio(map-get(map-get($val, 'tablet'), 'w'), map-get(map-get($val, 'tablet'), 'h'));
                        }
                    }
    
                    @if map-get($val, 'mobile') {
                        @include mobile-down {
                            @include aspect-ratio(map-get(map-get($val, 'mobile'), 'w'), map-get(map-get($val, 'mobile'), 'h'));
                        }
                    }

                    @if map-get($val, 'small-mobile') {
                        @include small-mobile {
                            @include aspect-ratio(map-get(map-get($val, 'small-mobile'), 'w'), map-get(map-get($val, 'small-mobile'), 'h'));
                        }
                    } 
                }
            }
        }
        
    }
}
